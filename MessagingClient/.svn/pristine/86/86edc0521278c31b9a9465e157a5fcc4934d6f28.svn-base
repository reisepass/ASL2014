package GeneralizedClients;

import java.io.IOException;
import java.net.UnknownHostException;
import java.util.ArrayList;
import java.util.Random;
import java.util.concurrent.ExecutorService;
import java.util.concurrent.Executors;

import edu.ethz.asl.user04.clientAPI.MessageAPI;
import edu.ethz.asl.user04.messagebroker.ConfigurableMessageBrokerService;
import edu.ethz.asl.user04.shared.entity.Client;
import edu.ethz.asl.user04.shared.entity.ExperimentConfiguration;

public class ExperimentExecuter {
	
	public ExperimentExecuter(){
		
	}
	//Assume the server is running already 
	public void doSomeScience( ExperimentConfiguration cfg){
		int totalNumberClient=0;
		Random rand = new Random();
		//ConfigurableMessageBrokerService service = new ConfigurableMessageBrokerService(cfg.numberOfMessageHandlerThreads,cfg.numberOfDBConnections);
		
		
		
		
		ArrayList<Integer> safeQs= new ArrayList<Integer>(cfg.numberSafeQueues);
		for(int i=4000;i<4000+cfg.numberSafeQueues;i++)
			safeQs.add(i);
		ArrayList<Integer> unSafeQs= new ArrayList<Integer>(cfg.numberUnsafeQueues);
		for(int i=8000;i<8000+cfg.numberUnsafeQueues;i++)
			unSafeQs.add(i);
		
		for(String nam : cfg.numberOfClientsPerType.keySet())
			totalNumberClient+=cfg.numberOfClientsPerType.get(nam);
		
		ExecutorService pool = Executors.newFixedThreadPool(totalNumberClient);
		int idStartPoint = 1000;
		for(String nam : cfg.numberOfClientsPerType.keySet()){
			Client template = cfg.theActualClientObjectByName.get(nam);
			
			
			for(int i=0;i<cfg.numberOfClientsPerType.get(nam);i++){
				Client tmp = template.clone();
				tmp.setClientID(idStartPoint++);	
				tmp.setSafeQueueList(safeQs);
				tmp.setUnSafeQueueList(unSafeQs);
			
				pool.execute(tmp);
				
			}
		}

	}
	public static void main(String args){
		ExperimentExecuter ex = new ExperimentExecuter();
		ExperimentConfiguration cfg = new ExperimentConfiguration(25,15,1,10,0);
		try {
			ClientOnlySendOnlySafeQueue c1 = new ClientOnlySendOnlySafeQueue(10,cfg,new MessageAPI());
		} catch (UnknownHostException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		} catch (IOException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
	}
}
